Using ``matrix_divided``
-----------------------

Checks if all matrix items are ints or floats
Checks if length of lists in matrix are same
Checks if div is a float or int or 0
Divides all items in matrix by div
Returns a new matrix

First import ``matrix_divided``

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


Test: Input matrix have element is not integer
     >>> matrix = [[3, "9"], [12, 3]]
     >>> matrix_divided(matrix, 2)
     Traceback (most recent call last):
     ...  
     TypeError: matrix must be a matrix (list of lists) of integers/floats

Test: Input div is not a integer
     >>> matrix = [[3, 9], [12, 3]]
     >>> matrix_divided(matrix, "2")
     Traceback (most recent call last):
     ...
     TypeError: div must be a number

Test: div = float('inf'):
     >>> matrix_divided([[1]], float("inf"))
     [[0.0]]